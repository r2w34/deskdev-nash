ARG OPENHANDS_BUILD_VERSION=dev
FROM node:24.3.0-bookworm-slim AS frontend-builder

WORKDIR /app

COPY frontend/package.json frontend/package-lock.json ./
RUN npm ci

COPY frontend ./
RUN npm run build

FROM python:3.12.10-slim AS backend-builder

WORKDIR /app
ENV PYTHONPATH='/app'

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

RUN apt-get update -y \
    && apt-get install -y curl make git build-essential \
    && python3 -m pip install poetry --break-system-packages

COPY pyproject.toml poetry.lock ./
RUN touch README.md
RUN export POETRY_CACHE_DIR && poetry install --no-root && rm -rf $POETRY_CACHE_DIR

FROM python:3.12.10-slim

WORKDIR /app

# re-declare for this section
ARG OPENHANDS_BUILD_VERSION

ENV PYTHONPATH='/app'
ENV OPENHANDS_BUILD_VERSION=$OPENHANDS_BUILD_VERSION
ENV FILE_STORE=local
ENV FILE_STORE_PATH=/app/data

# Create necessary directories
RUN mkdir -p $FILE_STORE_PATH

# Install system dependencies
RUN apt-get update -y \
    && apt-get install -y curl \
    && rm -rf /var/lib/apt/lists/*

ENV VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH"

# Copy virtual environment from builder
COPY --from=backend-builder ${VIRTUAL_ENV} ${VIRTUAL_ENV}

# Copy application code
COPY ./microagents ./microagents
COPY ./openhands ./openhands
COPY pyproject.toml poetry.lock README.md MANIFEST.in LICENSE ./

# Download assets
RUN python openhands/core/download.py

# Copy frontend build
COPY --from=frontend-builder /app/build ./frontend/build

# Expose port
EXPOSE 3000

CMD ["uvicorn", "openhands.server.listen:app", "--host", "0.0.0.0", "--port", "3000"]